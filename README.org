Org-site is a /very/ simple static site generator for [[http://www.gnu.org/s/emacs][Emacs]] org-mode files that
doesn't rely on Emacs for publishing.


* Usage

Create a template for a page, add any media such as stylesheets and images,
create some pages in org-mode and run the orgsite script to produce HTML
code. Then upload the code to your web server.

=orgsite.py -i /path/to/source -o /path/to/output -l 1=

   - -c config :: The site configuration file
   - -i input :: The path of the site input files
   - -o output :: The path of the generated HTML
   - -l offset :: The offset for headlines

* Workflow

At this moment, the org-site engine supports offline generation of content and
[[http://git-scm.com][git]] integration. For the first case, you run the generate script in your local
machine and then upload the generated code. If you use git, you can keep your
code in a repository and execute the generate script remotely via a post-update
hook.


* Input structure

$ROOT/
  - org/
  - templates/
  - media/

The =org= directory contains all input files. Org-site currently supports one
sublevel inside this folder. The =templates= dir has Jinja2 templates to control the
appearance of the rendered html. Finally, the =media= folder contains static
images, stylesheets that are copied as-is to the output destination.
    

* Templates

The =orgsite= script will traverse each of the directories inside of the =org=
folder. For each of them it will translate any .org file using a template file
with the same name (and the .html extension). If pages are inside of a
subfolder, then the script will try to use the template called
foldername_pagename.html. If it cannot find a suitable template file for a page,
it will default to page.html.

*** Variables

There are a number of pre-defined variables that can be used from templates:

  - page :: Contains the information about the page being generated. Attributes
            for a page object are:
	
			+ title: The title of the page, from the #+TITLE property
			+ fname: The page filename
			+ date: The value of #+DATE
			+ html: The generated HTML code for the page

  - site :: It has a reference to all the pages in the site. Attributes:
	     + name: The site name
	     + author_alias: The author alias
	     + author_name: The author full name
	     + pages: Access to all pages / folders (e.g. site.pages.posts.post1)




